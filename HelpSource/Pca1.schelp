title:: Pca1
summary:: pattern cellular automaton
categories:: transnd>pattern

description::
implements 1D binary single neighbouring rule cellular automanton

CLASSMETHODS::

METHOD:: new

argument:: list
a list of initial binary values of x in the lattice

argument:: rule
integer rule [0, 255]

argument:: repeats
stream length

INSTANCEMETHODS::
private:: rule, ruleAsBinary, makerule, evolve, embedInStream


EXAMPLES::

code::

// single cell alive
p = Pca1(Array.fill(300, {|i| if(i==150, {1}, {0}) }), 90, inf);
p.plot(500);// 500 generations

// random initial cell
p = Pca1(Array.fill(300, { 2.rand }), 90, inf);
p.plot(500);

// different rule
p = Pca1(Array.fill(300, {|i| if(i==150, {1}, {0}) }), 110, inf);
p.plot(500);

// mixing rule!
p = Pca1(Array.fill(300, {|i| if(i==150, {1}, {0}) }), Pseq([Pn(90, 10), Pn(110, 3)], inf), inf);
p.plot(500);

// another mix
// run a couple of times... see some nice knitting
w = Pca1(Array.fill(480, { |i| 2.rand }), Pbrown(0,255,5).stutter(Pbrown(1,80,4))).plot(800);

// save
i = Image.fromWindow(w);
i.write("~/Desktop/test.png".standardizePath);
i.free;
::